{
  "_from": "truffle-hdwallet-provider",
  "_id": "truffle-hdwallet-provider@0.0.5",
  "_inBundle": false,
  "_integrity": "sha512-dVVcHIOy7DRwVs+BeDt39pvHnHak1zb1BQ30pHaux7fmxk/T/TJVKp18D584qCWnCbnSt8bMdB3XxALPLXIbVw==",
  "_location": "/truffle-hdwallet-provider",
  "_phantomChildren": {
    "bignumber.js": "2.0.7",
    "crypto-js": "3.1.8",
    "utf8": "2.1.1",
    "xhr2": "0.1.4",
    "xmlhttprequest": "1.8.0"
  },
  "_requested": {
    "escapedName": "truffle-hdwallet-provider",
    "fetchSpec": "latest",
    "name": "truffle-hdwallet-provider",
    "raw": "truffle-hdwallet-provider",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/truffle-hdwallet-provider/-/truffle-hdwallet-provider-0.0.5.tgz",
  "_shasum": "6e3dc0fb607a40c8bf02312b9a6aa1ce49883902",
  "_shrinkwrap": null,
  "_spec": "truffle-hdwallet-provider",
  "_where": "/home/pablo/Documents/pablo/estudio/criptomonedas/ethereum/udemy/inbox",
  "author": {
    "email": "tim.coulter@consensys.net",
    "name": "Tim Coulter"
  },
  "bugs": {
    "url": "https://github.com/trufflesuite/truffle-hdwallet-provider/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bip39": "^2.2.0",
    "ethereumjs-wallet": "^0.6.0",
    "web3": "^0.18.2",
    "web3-provider-engine": "^14.0.5"
  },
  "deprecated": false,
  "description": "HD Wallet-enabled Web3 provider",
  "devDependencies": {
    "ganache-core": "^2.1.0",
    "mocha": "^5.1.1"
  },
  "homepage": "https://github.com/trufflesuite/truffle-hdwallet-provider#readme",
  "keywords": [
    "etheruem",
    "hd",
    "mnemonic",
    "provider",
    "wallet"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "truffle-hdwallet-provider",
  "optionalDependencies": {},
  "readme": "# truffle-hdwallet-provider\nHD Wallet-enabled Web3 provider. Use it to sign transactions for addresses derived from a 12-word mnemonic.\n\n## Install\n\n```\n$ npm install truffle-hdwallet-provider\n```\n\n## General Usage\n\nYou can use this provider wherever a Web3 provider is needed, not just in Truffle. For Truffle-specific usage, see next section.\n\n```javascript\nvar HDWalletProvider = require(\"truffle-hdwallet-provider\");\nvar mnemonic = \"opinion destroy betray ...\"; // 12 word mnemonic\nvar provider = new HDWalletProvider(mnemonic, \"http://localhost:8545\");\n\n// Or, alternatively pass in a zero-based address index.\nvar provider = new HDWalletProvider(mnemonic, \"http://localhost:8545\", 5);\n```\n\nBy default, the `HDWalletProvider` will use the address of the first address that's generated from the mnemonic. If you pass in a specific index, it'll use that address instead. Currently, the `HDWalletProvider` manages only one address at a time, but it can be easily upgraded to manage (i.e., \"unlock\") multiple addresses.\n\nParameters:\n\n- `mnemonic`: `string`. 12 word mnemonic which addresses are created from.\n- `provider_uri`: `string`. URI of Ethereum client to send all other non-transaction-related Web3 requests.\n- `address_index`: `number`, optional. If specified, will tell the provider to manage the address at the index specified. Defaults to the first address (index `0`).\n\n## Truffle Usage\n\nYou can easily use this within a Truffle configuration. For instance:\n\ntruffle.js\n```javascript\nvar HDWalletProvider = require(\"truffle-hdwallet-provider\");\n\nvar mnemonic = \"opinion destroy betray ...\";\n\nmodule.exports = {\n  networks: {\n    development: {\n      host: \"localhost\",\n      port: 8545,\n      network_id: \"*\" // Match any network id\n    },\n    ropsten: {\n      provider: new HDWalletProvider(mnemonic, \"https://ropsten.infura.io/\"),\n      network_id: 3\n    }\n  }\n};\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/trufflesuite/truffle-hdwallet-provider.git"
  },
  "scripts": {
    "test": "mocha --timeout 5000"
  },
  "version": "0.0.5"
}
